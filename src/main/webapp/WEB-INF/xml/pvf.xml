<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- ParameterValidationChainDatabase is always the document element -->
<ParameterValidationChainDatabase>
    <!-- We always have a single ParameterValidationChains element under the parent -->
    <ParameterValidationChains>

        <!-- Each chain of validation rules is contained in a ParameterValidationDefinition element -->
        <!-- 
            This chain apply some global validation rules. If anyone supplies encoded or params with HTML
            characters, it will fail.
         -->
        <ParameterValidationDefinition>
            <!-- This is the list of validation classes that should be applied to matching parameters -->
            <ParameterValidationRuleList>
                <ParameterValidationRule>
                    <!-- This is the fully qualified name of the class used to apply the validation rule -->
                    <!-- All input fields are to be trimmed of excess whitespace -->
                    <validationRuleName>com.disc_au.validation.ruleimpl.TrimTextValidationRule</validationRuleName>
                </ParameterValidationRule>
                <ParameterValidationRule>
                    <!-- No parameters are expected to already be encoded -->
                    <validationRuleName>com.disc_au.validation.ruleimpl.FailIfNotCanonicalizedValidationRule</validationRuleName>
                </ParameterValidationRule>
                <ParameterValidationRule>
                    <!-- No parameters are expected to contain html -->
                    <validationRuleName>com.disc_au.validation.ruleimpl.FailIfContainsHTMLValidationRule</validationRuleName>
                </ParameterValidationRule>
            </ParameterValidationRuleList>
            <!-- This is a regex that defines which parameters will be validated by the classes above -->
            <paramNamePatternString>^textarea$</paramNamePatternString>
            <!-- This is a regex that defines which URLs will be validated by the classes above -->
            <requestURIPatternString>.*</requestURIPatternString>
            <!--
                 Setting this to false means the paramNamePatternString has to match the param name.
                 Setting it to true would mean that paramNamePatternString would have to *not* match the param name.
             -->          
            <paramNamePatternNegated>true</paramNamePatternNegated>
            <!--
                 Setting this to false means the requestURIPatternString has to match the uri.
                 Setting it to true would mean that requestURIPatternString would have to *not* match the uri name.
             -->
            <requestURIPatternNegated>false</requestURIPatternNegated>
        </ParameterValidationDefinition>        

		<ParameterValidationDefinition>
            <ParameterValidationRuleList>
                <ParameterValidationRule>                    
                    <validationRuleName>com.disc_au.validation.ruleimpl.TrimTextValidationRule</validationRuleName>
                </ParameterValidationRule>
                <ParameterValidationRule>
                    <!-- We expect this parameter to include HTML, so we encode it -->
                    <validationRuleName>com.disc_au.validation.ruleimpl.HTMLEncodeTextValidationRule</validationRuleName>
                </ParameterValidationRule>
            </ParameterValidationRuleList>
            <paramNamePatternString>^textarea$</paramNamePatternString>
            <requestURIPatternString>.*</requestURIPatternString>          
            <paramNamePatternNegated>false</paramNamePatternNegated>          
            <requestURIPatternNegated>false</requestURIPatternNegated>
        </ParameterValidationDefinition>
        
        <ParameterValidationDefinition>
            <ParameterValidationRuleList>
                <ParameterValidationRule>                    
                    <validationRuleName>com.disc_au.validation.ruleimpl.TrimTextValidationRule</validationRuleName>
                </ParameterValidationRule>
                <ParameterValidationRule>
                    <!-- We want to match either an empty string, or a valid number. -->
                    <validationRuleName>com.disc_au.validation.ruleimpl.FailIfNotRegexMatchValidationRule</validationRuleName>
                    <settings>
                        <entry>
                            <key>pattern</key>
                            <value>(^$)|(^-?[0-9]+(\.[0-9]+)?$)</value>
                        </entry>
                    </settings>
                </ParameterValidationRule>
            </ParameterValidationRuleList>
            <paramNamePatternString>^textfield3$</paramNamePatternString>
            <requestURIPatternString>.*</requestURIPatternString>          
            <paramNamePatternNegated>false</paramNamePatternNegated>          
            <requestURIPatternNegated>false</requestURIPatternNegated>
        </ParameterValidationDefinition>
        
        

    </ParameterValidationChains>
</ParameterValidationChainDatabase>